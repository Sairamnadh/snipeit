name: 'terraform-Azure'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: 
defaults:
  run:
    shell: bash
env: 
  ROOT_PATH: ${{github.workspace}}  
  ARM_CLIENT_ID: ${{secrets.AZURE_AD_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.AZURE_AD_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.AZURE_AD_TENENT_ID}}
  STAGE_NAME: production

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure Login
      run: az login --service-principal -u ${{secrets.AZURE_AD_CLIENT_ID}} -p ${{secrets.AZURE_AD_CLIENT_SECRET}} --tenant ${{secrets.AZURE_AD_TENAET_ID}}

    - name:  Set up Terraform
      uses: azure/setup-terraform@v1
      with: 
        backend-service-principal: ${{secrets.AZURE_AD_CLIENT_ID}}
        backend-service-principal-secret: ${{secrets.AZURE_AD_CLIENT_SECRET}}
        backend-tenant-id: ${{secrets.AZURE_AD_TENANT_ID}}
        backend-subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        backend-resource-group: snipeit
        backend-storage-account-name: sanipeit
        backend-container-name: snipeit

    - name: Terraform Plan
      run: terraform plan -var-file=variables.tfvars


    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
    - name: terraform init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}


  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
 
    - name: terraform Init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Init
      run: echo 'var -> ${{inputs.tf_destroy}}'
      working-directory: ${{ env.ROOT_PATH }}

      #github.ref == 'refs/heads/main' && github.event_name == 'push'
    - name: terraform Apply
      run: terraform apply -auto-approve
      if: ${{inputs.tf_destroy}} == false
      working-directory: ${{ env.ROOT_PATH }}

    # - name: terraform destroy
    #   run: terraform destroy -auto-approve
    #   if: ${{inputs.tf_destroy}} == true
    #   working-directory: ${{ env.ROOT_PATH }}
    
